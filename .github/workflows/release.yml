name: release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    strategy:
      matrix:
        goarch:
          - amd64
          - s390x
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19.6"
      - name: cache go mod
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go
      - name: cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            tools/optimizer-server/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('tools/optimizer-server/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo
      - name: build nydus-snapshotter and optimizer
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.51.2
          export PATH=$PATH:$(go env GOPATH)/bin
          export GOARCH=${{ matrix.goarch }}
          sed -i -e '/{STATIC_OPTIMIZER_SERVER_BIN}/d' Makefile
          make static-release
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nydus-snapshotter_artifacts-${{ matrix.goarch }}
          path: |
            bin/containerd-nydus-grpc
            bin/nydus-overlayfs
  upload:
    strategy:
      matrix:
        goarch:
          - amd64
          - s390x
        include:
          - goarch: amd64
            release_arch: x86_64
          - goarch: s390x
            release_arch: s390x
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: nydus-snapshotter_artifacts-${{ matrix.goarch }}
          path: nydus-snapshotter
      - name: Upload Artifacts
        run: |
          tag=$(echo $GITHUB_REF | cut -d/ -f3-)
          tarball="nydus-snapshotter-$tag-${{ matrix.release_arch }}.tgz"
          chmod +x nydus-snapshotter/*
          tar cf - nydus-snapshotter | gzip > ${tarball}
          echo "tag=$tag" >> $GITHUB_ENV
          echo "tarball=$tarball" >> $GITHUB_ENV

          tarball_shasum="$tarball.sha256sum"
          sha256sum $tarball > $tarball_shasum
          echo "tarball_shasum=$tarball_shasum" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Nydus Snapshotter ${{ env.tag }} Release"
          generate_release_notes: true
          files: |
            ${{ env.tarball }}
            ${{ env.tarball_shasum }}
